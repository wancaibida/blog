<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>W2X</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://w2x.me/"/>
  <updated>2019-03-14T13:17:22.630Z</updated>
  <id>https://w2x.me/</id>
  
  <author>
    <name>大丈夫没问题</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Openwrt x86安装教程</title>
    <link href="https://w2x.me/2019/03/13/openwrt-x86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://w2x.me/2019/03/13/openwrt-x86安装教程/</id>
    <published>2019-03-13T12:12:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;网上Openwrt x86虚拟机安装的教程一大堆，却很少见到非虚拟机的教程，现在正好有机会重新刷机，就顺便把步骤记录一下，免得再次踩坑。&lt;/p&gt;
&lt;h2 id=&quot;镜像下载&quot;&gt;&lt;a href=&quot;#镜像下载&quot; class=&quot;headerlink&quot; title=&quot;镜像下载&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
    
      <category term="linux" scheme="https://w2x.me/tags/linux/"/>
    
      <category term="openwrt" scheme="https://w2x.me/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>hexo-deploy-git提交历史丢失的解决方法</title>
    <link href="https://w2x.me/2019/02/28/hexo-deploy-git%E6%8F%90%E4%BA%A4%E5%8E%86%E5%8F%B2%E4%B8%A2%E5%A4%B1%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://w2x.me/2019/02/28/hexo-deploy-git提交历史丢失的解决方法/</id>
    <published>2019-02-28T13:55:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;迫于笔记本太重再加上每天上下班要背两小时多，笔记本就一直丢在公司里了。家里的windows越用越不爽，装了ubuntu折腾了一阵子发现不是太好用，V站好多推荐manjaro linux，用下来很顺手而且非常稳定，以后家中主力操作系统就用manjaro了。&lt;/p&gt;
&lt;p&gt;由于
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
    
      <category term="hexo" scheme="https://w2x.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>记wr1200js刷机遇到的问题</title>
    <link href="https://w2x.me/2019/02/27/%E8%AE%B0wr1200js%E5%88%B7%E6%9C%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>https://w2x.me/2019/02/27/记wr1200js刷机遇到的问题/</id>
    <published>2019-02-27T13:05:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几天入手了一台wr1200js路由器，到手后成功刷上了openwrt。但重启后发现路由器的配置都丢失了，连管理密码都丢了，网上好多人刷了openwrt后也遇到这样的问题，有说法是路由器闪存读写次数过多坏了，但这刚买的因该不会是这问题，后来在重新刷了下&lt;a href=&quot;ht
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
    
      <category term="linux" scheme="https://w2x.me/tags/linux/"/>
    
      <category term="openwrt" scheme="https://w2x.me/tags/openwrt/"/>
    
  </entry>
  
  <entry>
    <title>路由器相关的一些研究</title>
    <link href="https://w2x.me/2019/02/26/%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9B%B8%E5%85%B3%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A0%94%E7%A9%B6/"/>
    <id>https://w2x.me/2019/02/26/路由器相关的一些研究/</id>
    <published>2019-02-26T04:24:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;家中房间里的5G信号不好，每次都得手动切换到2.4G信号，有点麻烦，所以想在房间里弄一台AP，来实现无线无缝漫游，期间做了不少研究，故在此记录一下。&lt;/p&gt;
&lt;h2 id=&quot;路由器-AP&quot;&gt;&lt;a href=&quot;#路由器-AP&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
    
      <category term="linux" scheme="https://w2x.me/tags/linux/"/>
    
      <category term="openwrt" scheme="https://w2x.me/tags/openwrt/"/>
    
      <category term="wifi" scheme="https://w2x.me/tags/wifi/"/>
    
  </entry>
  
  <entry>
    <title>路由器透明代理</title>
    <link href="https://w2x.me/2018/12/26/%E8%B7%AF%E7%94%B1%E5%99%A8%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/"/>
    <id>https://w2x.me/2018/12/26/路由器透明代理/</id>
    <published>2018-12-26T01:28:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;作为程序员的都知道，现在比较流行的科学上网方式是$$。$$搭建步骤简单，速度快，相比其他的科学上网方式比较轻量。但这种方式也有一些缺点，比如需要在本机安装客户端，维护服务端信息等缺点，路由器透明代理就是为了解决这些问题而诞生的 。&lt;/p&gt;
&lt;h3 id=&quot;传统科学上网实现方
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
    
      <category term="linux" scheme="https://w2x.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Debian jessie 安装 docker</title>
    <link href="https://w2x.me/2018/12/20/Debian-jessie-%E5%AE%89%E8%A3%85-docker/"/>
    <id>https://w2x.me/2018/12/20/Debian-jessie-安装-docker/</id>
    <published>2018-12-20T03:31:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
      <category term="docker" scheme="https://w2x.me/categories/linux/docker/"/>
    
    
      <category term="docker" scheme="https://w2x.me/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Groovy JSON处理的一些细节</title>
    <link href="https://w2x.me/2018/10/30/Groovy%E5%AF%B9JSON%E5%A4%84%E7%90%86%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%86%E8%8A%82/"/>
    <id>https://w2x.me/2018/10/30/Groovy对JSON处理的一些细节/</id>
    <published>2018-10-30T01:19:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近遇到一项目，需要在手机端存储用户数据，实现离线访问。其中用户数据处理的逻辑如下图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgVXNlciBkYXRhIHV
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="groovy" scheme="https://w2x.me/tags/groovy/"/>
    
      <category term="java" scheme="https://w2x.me/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>ASUS 66u 搭建透明代理</title>
    <link href="https://w2x.me/2018/09/20/ASUS-66u-%E6%90%AD%E5%BB%BA%E9%80%8F%E6%98%8E%E4%BB%A3%E7%90%86/"/>
    <id>https://w2x.me/2018/09/20/ASUS-66u-搭建透明代理/</id>
    <published>2018-09-20T08:57:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装软件&quot;&gt;&lt;a href=&quot;#安装软件&quot; class=&quot;headerlink&quot; title=&quot;安装软件&quot;&gt;&lt;/a&gt;安装软件&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="ss" scheme="https://w2x.me/categories/ss/"/>
    
    
  </entry>
  
  <entry>
    <title>ShadowsocksX-NG实现白名单模式</title>
    <link href="https://w2x.me/2018/09/04/ShadowsocksX-NG%E5%AE%9E%E7%8E%B0%E7%99%BD%E5%90%8D%E5%8D%95%E6%A8%A1%E5%BC%8F/"/>
    <id>https://w2x.me/2018/09/04/ShadowsocksX-NG实现白名单模式/</id>
    <published>2018-09-04T02:39:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;ShadowsocksX-NG &lt;code&gt;Proxy Auto Configure Mode&lt;/code&gt;使用的是黑名单模式，默认直连，符合规则的走代理。要实现白名单模式，默认代理，符合规则的直连，有一种hack方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;找到程序文件夹下的a
      
    
    </summary>
    
    
      <category term="ss" scheme="https://w2x.me/tags/ss/"/>
    
  </entry>
  
  <entry>
    <title>Groovy+Grails迁移到Kotlin+Spring Boot的一些研究</title>
    <link href="https://w2x.me/2018/08/16/Groovy-Grails%E8%BF%81%E7%A7%BB%E5%88%B0Kotlin-Spring-Boot%E7%9A%84%E4%B8%80%E4%BA%9B%E7%A0%94%E7%A9%B6/"/>
    <id>https://w2x.me/2018/08/16/Groovy-Grails迁移到Kotlin-Spring-Boot的一些研究/</id>
    <published>2018-08-16T05:35:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Kotlin是静态语言，可以运行在JVM上且与java百分百可互操作。自从Google将Kotlin正式做为Android开发的语言后，Kotlin的一下子就火了起来。Kotlin不仅可以做为Android的首选开发语言，而且它也非常适合服务端的开发。&lt;/p&gt;
&lt;h2 id
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="grails" scheme="https://w2x.me/tags/grails/"/>
    
      <category term="groovy" scheme="https://w2x.me/tags/groovy/"/>
    
      <category term="kotlin" scheme="https://w2x.me/tags/kotlin/"/>
    
      <category term="java" scheme="https://w2x.me/tags/java/"/>
    
      <category term="spring" scheme="https://w2x.me/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Amazon API Gateway 踩坑记</title>
    <link href="https://w2x.me/2018/07/19/Amazon-API-Gateway-%E8%B8%A9%E5%9D%91%E8%AE%B0/"/>
    <id>https://w2x.me/2018/07/19/Amazon-API-Gateway-踩坑记/</id>
    <published>2018-07-19T12:23:52.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近项目中用到了Amazon API Gateway，当中遇到了不少的坑。本文主要罗列了在使用amazon api gateway中遇的问题，希望能帮助到遇到相同问题的开发者。&lt;/p&gt;
&lt;h2 id=&quot;不支持parmeters-array&quot;&gt;&lt;a href=&quot;#不支持par
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 浮点数存储方式</title>
    <link href="https://w2x.me/2018/05/20/Java-%E6%B5%AE%E7%82%B9%E6%95%B0%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F/"/>
    <id>https://w2x.me/2018/05/20/Java-浮点数存储方式/</id>
    <published>2018-05-20T14:35:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Java浮点数使用的是IEEE二进制浮点数算术标准。&lt;/p&gt;
&lt;p&gt;浮点数分为符号，指数，分数三部分。以32位浮点数为例，分为1符号位+8指数位+23分数位。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;1(bit)&lt;/th&gt;
&lt;th&gt;8(bit)&lt;/th&gt;

      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="java" scheme="https://w2x.me/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Grails 3.2.11 Bugs</title>
    <link href="https://w2x.me/2018/04/01/Grails-3-2-11-Bugs/"/>
    <id>https://w2x.me/2018/04/01/Grails-3-2-11-Bugs/</id>
    <published>2018-04-01T13:30:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;Functional Testing setup无法回滚&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/sp
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="grails" scheme="https://w2x.me/tags/grails/"/>
    
      <category term="groovy" scheme="https://w2x.me/tags/groovy/"/>
    
  </entry>
  
  <entry>
    <title>Spring RestTemplate 打印Request及Response内容</title>
    <link href="https://w2x.me/2018/04/01/Spring-RestTemplate-%E6%89%93%E5%8D%B0Request%E5%8F%8AResponse%E5%86%85%E5%AE%B9/"/>
    <id>https://w2x.me/2018/04/01/Spring-RestTemplate-打印Request及Response内容/</id>
    <published>2018-04-01T13:09:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="spring" scheme="https://w2x.me/tags/spring/"/>
    
      <category term="rest" scheme="https://w2x.me/tags/rest/"/>
    
  </entry>
  
  <entry>
    <title>Amazon API Gateway 返回406解决方法</title>
    <link href="https://w2x.me/2018/03/28/Amazon-API-Gateway-%E8%BF%94%E5%9B%9E406%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>https://w2x.me/2018/03/28/Amazon-API-Gateway-返回406解决方法/</id>
    <published>2018-03-28T13:40:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Integration Request里添加值为空字符串&lt;code&gt;&amp;#39;&amp;#39;&lt;/code&gt;的&lt;code&gt;Accept&lt;/code&gt;header即可&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://stackoverflow.com/questions/4
      
    
    </summary>
    
      <category term="linux" scheme="https://w2x.me/categories/linux/"/>
    
    
      <category term="aws" scheme="https://w2x.me/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>Groovy正则表达式用法</title>
    <link href="https://w2x.me/2018/03/28/Groovy%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%94%A8%E6%B3%95/"/>
    <id>https://w2x.me/2018/03/28/Groovy正则表达式用法/</id>
    <published>2018-03-28T13:17:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Matcher example：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="groovy" scheme="https://w2x.me/tags/groovy/"/>
    
  </entry>
  
  <entry>
    <title>Sl4j+Logback依赖配置</title>
    <link href="https://w2x.me/2018/02/12/Sl4j-Logback%E4%BE%9D%E8%B5%96%E9%85%8D%E7%BD%AE/"/>
    <id>https://w2x.me/2018/02/12/Sl4j-Logback依赖配置/</id>
    <published>2018-02-12T13:29:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="java" scheme="https://w2x.me/tags/java/"/>
    
      <category term="logback" scheme="https://w2x.me/tags/logback/"/>
    
      <category term="sl4j" scheme="https://w2x.me/tags/sl4j/"/>
    
      <category term="gradle" scheme="https://w2x.me/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>Alfred argv与query的用法</title>
    <link href="https://w2x.me/2018/01/24/Alfred-argv%E4%B8%8Equery%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>https://w2x.me/2018/01/24/Alfred-argv与query的用法/</id>
    <published>2018-01-24T07:54:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
      <category term="mac os" scheme="https://w2x.me/categories/mac-os/"/>
    
    
      <category term="alfred" scheme="https://w2x.me/tags/alfred/"/>
    
      <category term="workflow" scheme="https://w2x.me/tags/workflow/"/>
    
  </entry>
  
  <entry>
    <title>Grails JSON Views 教程</title>
    <link href="https://w2x.me/2017/12/21/Grails-JSON-Views-%E6%95%99%E7%A8%8B/"/>
    <id>https://w2x.me/2017/12/21/Grails-JSON-Views-教程/</id>
    <published>2017-12-21T05:21:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Grails 3.2版本中的rest-api profile加入了JSON View插件，JSON View插件主要用于渲染JSON返回内容，类似于GSP，其好处就是将JSON渲染从控制器层移到了视图层，同时JSON View还能定义模板，继承等。&lt;/p&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="grails" scheme="https://w2x.me/tags/grails/"/>
    
      <category term="json" scheme="https://w2x.me/tags/json/"/>
    
      <category term="view" scheme="https://w2x.me/tags/view/"/>
    
      <category term="json-views" scheme="https://w2x.me/tags/json-views/"/>
    
  </entry>
  
  <entry>
    <title>记一个Grails JSON Views的Bug</title>
    <link href="https://w2x.me/2017/12/03/%E8%AE%B0%E4%B8%80%E4%B8%AAGrails-JSON-Views%E7%9A%84Bug/"/>
    <id>https://w2x.me/2017/12/03/记一个Grails-JSON-Views的Bug/</id>
    <published>2017-12-03T07:25:00.000Z</published>
    <updated>2019-03-14T13:17:22.630Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近项目用到了3.2版本的Grails，这个版本中引入了一个新特性JSON views，主要作用是将JSON返回内容视为一种视图,类似于GSP。其好处就是可以在视图层定义返回json的格式，而且可以定义bean的JSON模版，比较灵活。&lt;/p&gt;
&lt;p&gt;项目中有一个名为&lt;co
      
    
    </summary>
    
      <category term="java" scheme="https://w2x.me/categories/java/"/>
    
    
      <category term="grails" scheme="https://w2x.me/tags/grails/"/>
    
      <category term="json" scheme="https://w2x.me/tags/json/"/>
    
  </entry>
  
</feed>
